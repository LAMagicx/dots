import re
import argparse
import requests
from bs4 import BeautifulSoup

def get_torrents(url, t):
	try:
		r = requests.get(url, timeout=7)
	except requests.Timeout:
		print('Request timeout')
		return None
	else:
		torrents = {}
		torrents.update({'title':t})
		soup = BeautifulSoup(r.text, 'html.parser')
		links = soup.find_all('a');
		for link in links:
			title = link.get('title')
			if title:
				if t in title and 'Torrent' in title and not 'BluRay' in title: 
					tor = link.get('href')[link.get('href').rfind("/")+1:]
					res = re.search(r"(\d+)p", title)
					if res:
						res = res.group(1)
						torrents.update({res:{}})
						torrents[res].update({'link': tor})
						torrents[res].update({'url': link.get('href')})
		return torrents

def addTorrent(torrent):
	keys = list(torrent.keys())

	if '1080' in keys:
		return torrent['1080']['link']
	elif '720' in keys:	
		return torrent['720']['link']
	else:
		return ""

def doSomething(torrents):
	for i,movie in enumerate(torrents):
		print("{0} : {1}".format(len(torrents)-i, movie['title']))
	choices = [len(torrents)-int(s) for s in input("please select films to add (numbers separated by a space ex: 1 2 4) : ").split(" ")]
	torrents_to_add = []
	for i in choices:
		print("added {}".format(torrents[i]['title']))
		torrents_to_add.append(addTorrent(torrents[i]))


def main():
	parser = argparse.ArgumentParser()
	parser.add_argument('movie', type=str,
						help='Movie name in single quotes')
	args = parser.parse_args()
	name = args.movie.lower()
	movie_name = args.movie.replace(' ', '%20')

	print('Retreiving data')
	try:
		r = requests.get('https://yts.mx/browse-movies/{}/all/all/0/latest/0/all'.format(movie_name), timeout=7, params={'limit':50,'movie_count':50})
	except requests.Timeout:
		print('Request timeout')
	else:
		print('Retrived data')
		torrents = []
		soup = BeautifulSoup(r.text, 'html.parser')

		h2 = soup.find_all('h2')
		number_search = re.search(r"(<b>)(.*)(</b>)", str(h2))
		if number_search:
			number_of_films = int(number_search.group(2).replace(",", ""))
			print("Found {} films matching {}".format(number_of_films, args.movie))
			if number_of_films == 0:
				pass
		else:
			print("can't find number of films")
			print(h2)
			exit(1)
		
		page = 1
		limit=20

		while  page < number_of_films / limit + 1:
			titles = soup.find_all(class_="browse-movie-title")
			if titles:
				for t in titles:
					href_search = re.search(r"href=\"(.*)\"", str(t))
					if href_search: url = href_search.group(1)
					torrents.append(get_torrents(url, t.text))

			page += 1
			payload = {
				'limit': limit,
				'page': page
			}
			r = requests.get('https://yts.mx/browse-movies/{}/all/all/0/latest/0/all'.format(movie_name), timeout=7, params=payload)
			soup = BeautifulSoup(r.text, 'html.parser')

		doSomething(torrents)

		exit(1)

	print("Movie not found")


# Uncomment this for testing
if __name__ == "__main__":
	main()

# "vim: set sw=4:set tabstop=4
