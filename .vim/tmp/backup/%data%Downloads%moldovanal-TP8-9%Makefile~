CC=gcc -Wall
SRC=$(wildcard src/*.c)
HEAD=$(wildcard src/*.h)
OBJ=$(SRC:.c=.o)
LOGIN=moldovanal
PROJ=${LOGIN}-$(shell basename $$(pwd))
GIVEN= bin doc save src README.md Doxyfile Makefile
PROG=bin/exec

# Nous voulons générer l'éxecutable ainsi que la documentation
all: ${PROG} doc

# Compilation du programme
${PROG}: ${OBJ}
	${CC} $^ -o $@ -lm -lncurses

# Compilation des objets
.c.o:
	${CC} -c $^ -o $@

.PHONY: clean fclean doc give save restore

# Génération de la documentation doxygen
doc:
	doxygen &> /dev/null

# Sauvegarde des fichiers source dans le dossier save
save:
	mkdir -p save
	cp ${SRC} ${HEAD} save/

# Restauration des fichiers source depuis le dossier save
restore:
	cp save/* src/

# Génération d'une archive de rendu
give: fclean
	mkdir -p tmp/${PROJ}
	cp -r ${GIVEN} tmp/${PROJ}
	cd tmp && zip -r ./../${PROJ}.zip ${PROJ}
	rm -rf tmp
	unzip -l ${PROJ}.zip

# Nettoyage des fichiers générés, sauf sauvegardes
clean:
	rm -f ${OBJ}
	rm -f ${PROG}
	rm -rf doc/*
	rm -f *.zip
	rm -rf tmp
	rm -f *.out
	rm -rf ${PROJ}

# Nettoyage des fichiers générés ainsi que du dossier save
fclean: clean
	rm -rf save/*