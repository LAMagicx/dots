/*! 
  \file pi.c
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 22-11-21
  \brief DESCRIPTION
  \remarks REMARKS
*/
#include "pi.h"

/*! 
  \fn pi_random
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 22-11-21
  \brief DESCRIPTION
  \return type double
  \param n of type long int
*/
double pi_random(long int n) {
	double x;
	double y;
	int i;
	int count = 0;
	for (i = 0; i < n; i++) {
		x = ((double)rand()) / ((double)RAND_MAX) * 2 - 1;
		y = ((double)rand() / (double)RAND_MAX) * 2 - 1;
		if (sqrt(x*x + y*y) <= 1) {
			count++;
		}
	}
	return (double)(count * 4.0f) / (double)n;
}


/*! 
  \fn pi_madhava
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 22-11-21
  \brief DESCRIPTION
  \return type double
  \param n of type long int
*/
double pi_madhava(long int n) {
	double s = 0.0;
	int k;
	for (k = 0; k < n; k ++ ) {
		if (k%2==0) {
			s += 1.0f / (double)(2*k+1);
		} else {
			s -= 1.0f / (double)(2*k+1);
		}
	}
	return 4*s;
}

/*! 
  \fn pi_john
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 22-11-21
  \brief DESCRIPTION
  \return type double
  \param n of type long int
*/
double pi_john(long int n) {
	double p = 1;
	int k;
	for (k = 1; k < n; k++) {
		p *= (double)((2*(double)k)*(2*(double)k))/(double)((2*(double)k)*(2*(double)k)-1);
	}
	return 2.0f * p;
}
