/*! 
  \file sq2.c
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 22-11-21
  \brief functions calculating sqrt 2
*/
#include "sq2.h"

/*! 
  \fn sq2_newton
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 22-11-21
  \brief calculating sqrt 2 using newtons method
  \return type double
  \param n of type long int
*/
double sq2_newton(long int n) {
	double u1;
	double u0 = 1;
	int i;
	for (i = 0; i < n; i++) {
		u1 = u0/2.0 + 1.0/u0;
		u0 = u1;
	}
	return u0;
}

/*! 
  \fn sq2_halley
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 22-11-21
  \brief calculating sqrt 2 using halleys sequence
  \return type double
  \param n of type long int
*/
double sq2_halley(long int n) {
	double x0 = 1;
	double x1;
	int i;
	for (i = 0; i < n; i++) {
		x1 = x0 * (x0*x0+6.0) / (3.0*x0*x0+2.0);
		x0 = x1;
	}
	return x0;
}

/*! 
  \fn sq2_smyrne
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 22-11-21
  \brief calculating sqrt 2 using smyrne's sequence
  \return type double
  \param n of type long int
*/
double sq2_smyrne(long int n) {
	double p0 = 1;
	double q0 = 1;
	double p1;
	double q1;
	int i;
	for (i = 0; i < n; i++) {
		p1 = p0 + 2.0 * q0;
		q1 = p0 + q0;
		p0 = p1;
		q0 = q1;
	}
	return (double)p0/(double)q0;
}
