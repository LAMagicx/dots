#include "ball.h"

void drawCircle(SDL_Renderer * renderer, int32_t centreX, int32_t centreY, int32_t radius)
{
	// draws a circle to the screen
	const int32_t diameter = (radius * 2);

	int32_t x = (radius - 1);
	int32_t y = 0;
	int32_t tx = 1;
	int32_t ty = 1;
	int32_t error = (tx - diameter);

	while (x >= y)
	{
		//  Each of the following renders an octant of the circle
		SDL_RenderDrawPoint(renderer, centreX + x, centreY - y);
		SDL_RenderDrawPoint(renderer, centreX + x, centreY + y);
		SDL_RenderDrawPoint(renderer, centreX - x, centreY - y);
		SDL_RenderDrawPoint(renderer, centreX - x, centreY + y);
		SDL_RenderDrawPoint(renderer, centreX + y, centreY - x);
		SDL_RenderDrawPoint(renderer, centreX + y, centreY + x);
		SDL_RenderDrawPoint(renderer, centreX - y, centreY - x);
		SDL_RenderDrawPoint(renderer, centreX - y, centreY + x);

		if (error <= 0)
		{
			++y;
			error += ty;
			ty += 2;
		}

		if (error > 0)
		{
			--x;
			tx += 2;
			error += (tx - diameter);
		}
	}
}

void drawBall(SDL_Renderer * renderer, ball b)
{
	// draws a ball to the screen
	drawCircle(renderer, b.x, b.y, b.r);
}

void updateBall(SDL_Renderer * renderer, ball * b)
{
	// moves the ball
	b->vx += b->ax;
	b->vy += b->ay;
	b->x += b->vx;
	b->y += b->vy;
	b->ax = 0;
	b->ay = 0;
}

void createBall(int x, int y, int r) 
{
	// creates a ball and adds it the the array
	if (balls == NULL) {
		balls = malloc(sizeof(ball) * 1);
	} else {
		balls = realloc(balls, sizeof(ball) * ballCount+1);
	}
	ball b;
	b.x = x;
	b.y = y;
	b.vx = 0.0f;
	b.vy = 0.0f;
	b.ax = 0.0f;
	b.ay = 0.0f;
	b.r = r;

	*(balls+ballCount) = b;

	printf("%d\n", ballCount);

	ballCount++;
}
