/*! 
  \file main.c
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 31-12-21
  \brief TD Chaines de caracteres
  \remarks none
*/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <math.h>
#define MAX_STR_SIZE 512

/*! 
  \fn cesar
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 31-12-21
  \brief encyptes the message using the cesar cypher
  \return type char *
  \param msg of type char *
  \param delta of type int
*/
char * cesar(char * msg, int delta) {
	char * encrypted_msg = calloc(1, strlen(msg));
	char * e = encrypted_msg;
	for (char * c = msg; c < msg+strlen(msg); c++)
		if (*c >= 'A' && *c <= 'Z')
			*e++ = (*c + ((delta<0)?26+delta:delta) - 'A') % 26 + 'A';
		else if (*c >= 'a' && *c <= 'z')
			*e++ = (*c + ((delta<0)?26+delta:delta) - 'a') % 26 + 'a';
		else
			*e++ = *c;
	return encrypted_msg;
}

/*! 
  \fn vigenere
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 31-12-21
  \brief encyptes the message using the vigenere cypher
  \return type char *
  \param msg of type char *
  \param key of type char *
*/
char * vigenere(char * msg, char * key) {
	char * encrypted_msg = calloc(1, strlen(msg));
	char * k = key;
	for (int i = 0; i < (int)strlen(msg); i++) {
		if (msg[i] >= 'A' && msg[i] <= 'Z')
			encrypted_msg[i] = (msg[i] + (toupper(*k++)-'A') - 'A') % 26 + 'A';
		else if (msg[i] >= 'a' && msg[i] <= 'z')
			encrypted_msg[i] = (msg[i] + (toupper(*k++)-'A') - 'a') % 26 + 'a';
		else
			encrypted_msg[i] = msg[i];
		if (k >= key+strlen(key)-1)
			k = key;
	}
	return encrypted_msg;
}

/*! 
  \fn scytale
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 31-12-21
  \brief encyptes the message using the scytale cypher
  \return type char *
  \param msg of type char *
*/
char * scytale(char * msg) {
	int n = ceil(sqrt(strlen(msg)));
	char * encrypted_msg = calloc(1, n);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			encrypted_msg[i+j*n] = (j+i*n < (int)strlen(msg)-1)?msg[j+i*n]:' ';
		}
	}
	return encrypted_msg;
}

/*! 
  \fn main
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 31-12-21
  \brief main function
  \return type int
  \param argc of type int
  \param argv of type char **
*/
int main(int argc, char ** argv) {
	char buffer[MAX_STR_SIZE];
	char buffer2[MAX_STR_SIZE];
	if (argc > 1) {
		if (strcmp(argv[1], "-c") == 0) {
			int delta;
			printf("word: ");
			fgets(buffer, MAX_STR_SIZE, stdin);
			printf("offset: ");
			scanf("%d", &delta);
			printf("%s\n", cesar(buffer, delta));
		} else if (strcmp(argv[1], "-v") == 0) {
			printf("word: ");	
			fgets(buffer, MAX_STR_SIZE, stdin);
			printf("key: ");
			fgets(buffer2, MAX_STR_SIZE, stdin);
			printf("%s\n", vigenere(buffer, buffer2));
		} else if (strcmp(argv[1], "-s") == 0) {
			printf("word: ");
			fgets(buffer, MAX_STR_SIZE, stdin);
			printf("%s\n", scytale(buffer));
		}
	}else{
		printf("arguments: \n\t-c cesar\n\t-v vigenere\n\t-s scytale\n");
	}
	return 0;
}
