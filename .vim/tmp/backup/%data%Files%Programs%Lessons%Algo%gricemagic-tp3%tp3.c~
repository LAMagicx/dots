/*! 
  \file tp3.c
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 19-11-21
  \brief tp3
  \remarks REMARKS
*/
#include <stdio.h>
#include <stdlib.h>
#include <math.h>


/*! 
  \fn enterInteger
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 19-11-21
  \brief only allows an integer to be typed
  \param x of type int *
*/
void enterInteger(int * x){
	// EX1
	int out;
	do {
		out = scanf("%d", x);
	}while (out == 0);
}

/*! 
  \fn foo
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 19-11-21
  \brief bidon
*/
void foo() {
	int n;
	printf("n : %d\n", n);
	enterInteger(&n);
	printf("n : %d\n", n);
}

/*! 
  \fn EX2
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 19-11-21
  \brief ex2
*/
void EX2() {
	int n;
	printf("n : %d\n", n);
	enterInteger(&n);
	printf("n : %d\n", n);
	foo();
	printf("n : %d\n", n);
}

/*! 
  \fn swap
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 19-11-21
  \brief swaps two integers
  \param n1 of type int
  \param n2 of type int
*/
void swap(int n1, int n2) {
	printf("before:\nn1 = %d\nn2 = %d\n", n1, n2);
	int tmp = n1;
	n1 = n2;
	n2 = tmp;
	printf("after:\nn1 = %d\nn2 = %d\n", n1, n2);
}

/*! 
  \fn EX3
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 19-11-21
  \brief ex3
*/
void EX3() {
	int n1;
	int n2;
	int tmp;
	n1 = 5;
	n2 = 7;
	printf("before:\nn1 = %d\nn2 = %d\n", n1, n2);
	tmp = n1;
	n1 = n2;
	n2 = tmp;
	printf("calling funciton\n");
	swap(n1, n2);
	printf("after function call:\nn1 = %d\nn2 = %d\n", n1, n2);
	tmp = n1;
	n1 = n2;
	n2 = tmp;
}

/*! 
  \fn showTriangle
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 19-11-21
  \brief shows a triangle of stars
  \param n of type int
*/
void showTriangle(int n) {
	int i;
	int j;
	const int SIZE = n * 2;
	for (i = 0; i < n; i++) {
		for (j = 0; j < (SIZE - 1 - i*2) / 2; j++) {
			printf(" ");
		}
		for (j = 0; j < (i * 2 + 1); j++) {
			printf("*");
		}
		printf("\n");
	}
}

/*! 
  \fn multiplicationTable
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 19-11-21
  \brief show the multiplication table of n
  \param n of type int
*/
void multiplicationTable(int n) {
	int i;
	for (i = 0; i < 10; i++) {
		printf("%d x %d = %d\n", i+1, n, (i+1)*n);
	}
}

/*! 
  \fn power
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 19-11-21
  \brief raises n to th power of p
  \return type int
  \param n of type int
  \param p of type int
*/
int power(int n, int p) {
	int s;
	s = 1;
	for (int i = 0; i < p; i++) {
		s *= n;
	}
	return s;
}

/*! 
  \fn isArmstrong
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 19-11-21
  \brief checks whether n is an Armstrong number
  \return type int
  \param n of type int
*/
int isArmstrong(int n) {
	int s;
	int d;
	int i;
	s = 0;
	d = log10(n) + 1;

	for (i = 0; i < d; i++) {
		s += power(n % power(10, (d-i)) / power(10, (d-i-1)), (d));
	}
	return s == n;	
}

/*! 
  \fn EX4
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 19-11-21
  \brief menu for ex4
*/
void EX4() {
	printf("show triangle : 1\n");
	printf("show multiplication table : 2\n");
	printf("show armstrong number : 3\n");
	int c;
	printf("enter the number to run the function [1,2,3]: ");
	enterInteger(&c);
	int n;
	printf("enter n: ");
	scanf("%d", &n);

	switch (c) {
		case 1:
			showTriangle(n);
			break;
		case 2:
			multiplicationTable(n);
			break;
		case 3:
			printf("%d armstrong ? %d\n", n, isArmstrong(n));
			break;
		default:
			printf("n not 1,2 or 3\n");
			break;
	}
}

/*! 
  \fn main
  \author Samson Grice <gricemagic@cy-tech.fr>
  \version 0.1
  \date 19-11-21
  \brief main function
  \return type int
  \param argc of type int
  \param argv of type char **
*/
int main(int argc, char ** argv) {
    if (argv){
        printf("%s\n", argc[argv-1]);
        // stop warnings on Linux
    }

	EX2();
	EX3();
	EX4();

	return 0;
}
